import json

import web3
from web3 import Web3

#To connect to ganache blockchain:
ganache_url = "http://127.0.0.1:7545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

#Information related to the smart contract:
#Every time we are making a change to the smart contract, we need to update
#these information. It could be a good idea to update these informations
#automaticaly but I don't knoz how to proceed.

#I am using the remix compiler: https://remix.ethereum.org/
#In the remix compiler, in the "solidity compiler" tab, after compilation click
#on the "Compilation Details" button, it should open a window with compilation
#details that we need such as bytecode and abi.

#In the section bytecode of the compilation details window, copy the string into
# the variable "object" and paste it in the "bytecode" variable down here.
#bytecode:
bytecode = "608060405234801561001057600080fd5b50600080819055506000600181905550600060028190555060016003819055506000600481905550600060058190555060006006819055506109be806100576000396000f3fe6080604052600436106101095760003560e01c80636eb0a7b011610095578063b523ea2611610064578063b523ea2614610401578063b976bbd614610450578063c654720d1461047b578063c88040c8146104a6578063d826f88f146104de57610109565b80636eb0a7b0146102f45780636f915e6d146103435780639bc102201461039e578063a7035b80146103c957610109565b80632771b945116100dc5780632771b945146101e7578063303687d81461021257806334a501c7146102605780636b5840ad146102985780636bcec934146102dd57610109565b806308a4e6b31461010b57806312065fe01461013657806317e98e85146101615780631dbf0df2146101bc575b005b34801561011757600080fd5b506101206104f5565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b6104fe565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101ba6004803603604081101561018457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061051d565b005b3480156101c857600080fd5b506101d1610646565b6040518082815260200191505060405180910390f35b3480156101f357600080fd5b506101fc610650565b6040518082815260200191505060405180910390f35b61025e6004803603604081101561022857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061065a565b005b6102966004803603604081101561027657600080fd5b8101908080359060200190929190803590602001909291905050506106f0565b005b3480156102a457600080fd5b506102db600480360360408110156102bb57600080fd5b810190808035906020019092919080359060200190929190505050610721565b005b3480156102e957600080fd5b506102f2610851565b005b34801561030057600080fd5b5061032d6004803603602081101561031757600080fd5b810190808035906020019092919050505061087b565b6040518082815260200191505060405180910390f35b34801561034f57600080fd5b5061039c6004803603604081101561036657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610892565b005b3480156103aa57600080fd5b506103b36108f9565b6040518082815260200191505060405180910390f35b6103ff600480360360408110156103df57600080fd5b810190808035906020019092919080359060200190929190505050610903565b005b34801561040d57600080fd5b5061043a6004803603602081101561042457600080fd5b8101908080359060200190929190505050610919565b6040518082815260200191505060405180910390f35b34801561045c57600080fd5b50610465610927565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490610931565b6040518082815260200191505060405180910390f35b6104dc600480360360408110156104bc57600080fd5b81019080803590602001909291908035906020019092919050505061093b565b005b3480156104ea57600080fd5b506104f3610950565b005b60008054905090565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60006002546000540313801561053557506000600554135b156105fd57806000036004546000548161054b57fe5b051261059b5780600254036002819055507ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f816000036040518082815260200191505060405180910390a16105f8565b600454600054816105a857fe5b05600254016002819055507ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f600454600054816105e157fe5b056040518082815260200191505060405180910390a15b610642565b6001600454036004819055507ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f60006040518082815260200191505060405180910390a15b5050565b6000600654905090565b6000600154905090565b60008190508273ffffffffffffffffffffffffffffffffffffffff166064828161068057fe5b0460405180600001905060006040518083038185875af1925050503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b505050600060055414156106eb57600060068190555060006002819055505b505050565b806006540160068190555080341461070757600080fd5b600182141561071d576001600454036004819055505b5050565b60008212156107c4576000600454141561073e5760006002819055505b60016004540160048190555060008113610767576107628260000382600003610903565b61078b565b600081131561078a5761077b60008261093b565b610789826000036000610903565b5b5b7ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f60016040518082815260200191505060405180910390a15b600082131561084d57600160055401600581905550600081126107f0576107eb828261093b565b610814565b600081121561081357610807600082600003610903565b61081282600061093b565b5b5b7ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f60026040518082815260200191505060405180910390a15b5050565b6001600554036005819055506000600554141561087957600060068190555060006002819055505b565b60008054606483028161088a57fe5b059050919050565b60016005540360058190555060006108a98261087b565b90507ffbe4fd3f48ae3c48233994fdc17df58066bc03d7af6ebff25908311101aee11f60065482026040518082815260200191505060405180910390a16108f483600654830261065a565b505050565b6000600454905090565b8082036001600082825401925050819055505050565b600081600354029050919050565b6000600254905090565b6000600554905090565b80820360008082825401925050819055505050565b6000808190555060006001819055506000600281905550600160038190555060006004819055506000600581905550600060068190555056fea265627a7a723058207983da3012651452a045f6bef6a3f5f4246409bf5b22e6d69ceb8e763f175ecb64736f6c634300050a0032"

#In the section WEB3DEPLOY of the compilation details window, on the first line,
#copy the content parse as argument of the function contract for the variable
#p2pContract = web3.eth.contract('content') and paste it as argument of the
#json.loads function below.
#abi:
abi = json.loads('[{"constant":true,"inputs":[],"name":"getAvailableEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_consumeEnergy","type":"int256"}],"name":"consumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getMaxBalanceForThisCycle","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getDemandEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"_amount","type":"int256"}],"name":"sendEther","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"_enough","type":"int256"},{"name":"_amount","type":"int256"}],"name":"deposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"_newEnergy","type":"int256"},{"name":"_pastEnergy","type":"int256"}],"name":"updateEnergy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deductProsumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_energyInjected","type":"int256"}],"name":"getPercentage","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_injectedEnergy","type":"int256"}],"name":"prosumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberConsumer","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_consumeEnergy","type":"int256"},{"name":"_pastConsumeEnergy","type":"int256"}],"name":"updateDemandEnergy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"_energy","type":"int256"}],"name":"convEnergyToEther","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getConsumedEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberProsumer","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_injectedEnergy","type":"int256"},{"name":"_pastInjectedEnergy","type":"int256"}],"name":"updateAvailableEnergy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"reset","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"value","type":"int256"}],"name":"MyEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"}],"name":"Message","type":"event"}]');

#After setting the bytecode and abi, go to the "Deploy & run transaction" tab.
#At this point, Ganache should be running to be able to deploy the contract on
#it.
#In the "Deploy & run transaction" tab, for Environment, select "Web3 Provider",
# it should pop up a window. Set the "Web3 Provider Endpoint" with the address
#where Ganache is running on your local machine.
#Here Ganache is running on the local address: "http://127.0.0.1:7545" see
#"ganache_url" variable in this script or the "RPC Server" value in Ganache.
#Set the good "Web3 Provider Endpoint" and click OK.
#On the "Deploy & run transaction", select the contract to deploy, here "p2p",
#and click "Deploy".
#In the section "Deployed Contracts" of the "Deploy & run transaction" tab, your
# contract should appear. Click on the "Copy value to clipboard" button and
#paste it to the argument of the function below.
#address:
address = web3.toChecksumAddress("0x05Afe59141c5AFc05572B2b82abD62C72e25EC25")

#Compile the Information related to the smart contract together.
contract = web3.eth.contract(address = address, abi = abi, bytecode = bytecode)
