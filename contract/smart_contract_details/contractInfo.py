import json

import web3
from web3 import Web3

#To connect to ganache blockchain:
ganache_url = "http://127.0.0.1:7545"
web3 = Web3(Web3.HTTPProvider(ganache_url))

#Information related to the smart contract:
#Every time we are making a change to the smart contract, we need to update
#these information. It could be a good idea to update these informations
#automaticaly but I don't knoz how to proceed.

#I am using the remix compiler: https://remix.ethereum.org/
#In the remix compiler, in the "solidity compiler" tab, after compilation click
#on the "Compilation Details" button, it should open a window with compilation
#details that we need such as bytecode and abi.

#In the section bytecode of the compilation details window, copy the string into
# the variable "object" and paste it in the "bytecode" variable down here.
#bytecode:
bytecode = "608060405234801561001057600080fd5b50600080819055506000600181905550600060028190555060016003819055506000600481905550600060058190555060006006819055506109a6806100576000396000f3fe6080604052600436106101095760003560e01c80639bc1022011610095578063c1756a2c11610064578063c1756a2c146103f5578063c654720d14610443578063c88040c81461046e578063d826f88f146104a6578063dbfc6b20146104bd57610109565b80639bc1022014610318578063a7035b8014610343578063b523ea261461037b578063b976bbd6146103ca57610109565b80632771b945116100dc5780632771b945146101e75780636b5840ad146102125780636bcec934146102575780636eb0a7b01461026e5780636f915e6d146102bd57610109565b806308a4e6b31461010b57806312065fe01461013657806317e98e85146101615780631dbf0df2146101bc575b005b34801561011757600080fd5b506101206104f5565b6040518082815260200191505060405180910390f35b34801561014257600080fd5b5061014b6104fe565b6040518082815260200191505060405180910390f35b34801561016d57600080fd5b506101ba6004803603604081101561018457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061051d565b005b3480156101c857600080fd5b506101d1610646565b6040518082815260200191505060405180910390f35b3480156101f357600080fd5b506101fc610650565b6040518082815260200191505060405180910390f35b34801561021e57600080fd5b506102556004803603604081101561023557600080fd5b81019080803590602001909291908035906020019092919050505061065a565b005b34801561026357600080fd5b5061026c61079b565b005b34801561027a57600080fd5b506102a76004803603602081101561029157600080fd5b81019080803590602001909291905050506107a9565b6040518082815260200191505060405180910390f35b3480156102c957600080fd5b50610316600480360360408110156102e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107bd565b005b34801561032457600080fd5b5061032d610818565b6040518082815260200191505060405180910390f35b6103796004803603604081101561035957600080fd5b810190808035906020019092919080359060200190929190505050610822565b005b34801561038757600080fd5b506103b46004803603602081101561039e57600080fd5b8101908080359060200190929190505050610838565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b506103df610846565b6040518082815260200191505060405180910390f35b6104416004803603604081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610850565b005b34801561044f57600080fd5b506104586108e8565b6040518082815260200191505060405180910390f35b6104a46004803603604081101561048457600080fd5b8101908080359060200190929190803590602001909291905050506108f2565b005b3480156104b257600080fd5b506104bb610907565b005b6104f3600480360360408110156104d357600080fd5b810190808035906020019092919080359060200190929190505050610940565b005b60008054905090565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60006002546000540313801561053557506000600554135b156105fd57806000036004546000548161054b57fe5b051261059b5780600254036002819055507f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e284816000036040518082815260200191505060405180910390a16105f8565b600454600054816105a857fe5b05600254016002819055507f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e284600454600054816105e157fe5b056040518082815260200191505060405180910390a15b610642565b6001600454036004819055507f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e28460006040518082815260200191505060405180910390a15b5050565b6000600654905090565b6000600154905090565b60008212156106fd57600160045401600481905550600081121561068d576106888260000382600003610822565b6106c4565b60008113156106b4576106a16000826108f2565b6106af826000036000610822565b6106c3565b6106c2826000036000610822565b5b5b7f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e28460016040518082815260200191505060405180910390a15b600082131561079757600160055401600581905550600081131561072a5761072582826108f2565b61075e565b600081121561075157610741600082600003610822565b61074c8260006108f2565b61075d565b61075c8260006108f2565b5b5b7f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e28460026040518082815260200191505060405180910390a15b5050565b600160055403600581905550565b6000805482816107b557fe5b059050919050565b60006107c8826107a9565b90507f6c2b4666ba8da5a95717621d879a77de725f3d816709b9cbe9f059b8f875e28460065482026040518082815260200191505060405180910390a1610813836006548302610850565b505050565b6000600454905090565b8082036001600082825401925050819055505050565b600081600354029050919050565b6000600254905090565b60008190508273ffffffffffffffffffffffffffffffffffffffff168160405180600001905060006040518083038185875af1925050503d80600081146108b3576040519150601f19603f3d011682016040523d82523d6000602084013e6108b8565b606091505b505050600160055403600581905550600060055414156108e357600060068190555060006002819055505b505050565b6000600554905090565b80820360008082825401925050819055505050565b60008081905550600060018190555060006002819055506001600381905550600060048190555060006005819055506000600681905550565b806006540160068190555080341461095757600080fd5b600182141561096d576001600454036004819055505b505056fea265627a7a72305820a589c4aa79251a0c5b37c9b84516c917641954fb2e464825d7a739c46c8f7aac64736f6c634300050a0032"

#In the section WEB3DEPLOY of the compilation details window, on the first line,
#copy the content parse as argument of the function contract for the variable
#p2pContract = web3.eth.contract('content') and paste it as argument of the
#json.loads function below.
#abi:
abi = json.loads('[{"constant":true,"inputs":[],"name":"getAvailableEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_consumeEnergy","type":"int256"}],"name":"consumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getMaxBalanceForThisCycle","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getDemandEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newEnergy","type":"int256"},{"name":"_pastEnergy","type":"int256"}],"name":"updateEnergy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deductProsumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_energyInjected","type":"int256"}],"name":"getPercentage","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_injectedEnergy","type":"int256"}],"name":"prosumer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberConsumer","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_consumeEnergy","type":"int256"},{"name":"_pastConsumeEnergy","type":"int256"}],"name":"updateDemandEnergy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"_energy","type":"int256"}],"name":"convEnergyToEther","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getConsumedEnergy","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"_amount","type":"uint256"}],"name":"sendEther","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberProsumer","outputs":[{"name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_injectedEnergy","type":"int256"},{"name":"_pastInjectedEnergy","type":"int256"}],"name":"updateAvailableEnergy","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"reset","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_enough","type":"int256"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"value","type":"uint256"}],"name":"MyEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"}],"name":"Message","type":"event"}]');

#After setting the bytecode and abi, go to the "Deploy & run transaction" tab.
#At this point, Ganache should be running to be able to deploy the contract on
#it.
#In the "Deploy & run transaction" tab, for Environment, select "Web3 Provider",
# it should pop up a window. Set the "Web3 Provider Endpoint" with the address
#where Ganache is running on your local machine.
#Here Ganache is running on the local address: "http://127.0.0.1:7545" see
#"ganache_url" variable in this script or the "RPC Server" value in Ganache.
#Set the good "Web3 Provider Endpoint" and click OK.
#On the "Deploy & run transaction", select the contract to deploy, here "p2p",
#and click "Deploy".
#In the section "Deployed Contracts" of the "Deploy & run transaction" tab, your
# contract should appear. Click on the "Copy value to clipboard" button and
#paste it to the argument of the function below.
#address:
address = web3.toChecksumAddress("0x2cA401e6fC730996AAa25b122E2B1833dEFA53f4")

#Compile the Information related to the smart contract together.
contract = web3.eth.contract(address = address, abi = abi, bytecode = bytecode)
